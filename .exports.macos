#!/bin/sh

# go path (homebrew might not been installed)
go_prefix="$(brew --prefix go 2>/dev/null)"
if [ -n "$go_prefix" ]; then
	if [ -d "$(brew --prefix)/Cellar/go" ]; then
		go_path="${go_prefix}/libexec/bin"
	else
		go_path=""
	fi
else
	go_path=""
fi
# append to '$path' only if it is not already there
paths="\
${HOME}/bin
/usr/local/sbin
${go_path}
/usr/local/opt/fzf/bin
/usr/local/opt/lsof/bin
/usr/local/opt/grep/libexec/gnubin
/usr/local/opt/gnu-indent/libexec/gnubin
/usr/local/opt/gnu-sed/libexec/gnubin
/usr/local/opt/gnu-tar/libexec/gnubin
/usr/local/opt/gnu-time/libexec/gnubin
/usr/local/opt/gnu-which/libexec/gnubin
/usr/local/opt/grep/libexec/gnubin
/usr/local/opt/make/libexec/gnubin
/usr/local/opt/libpcap/bin
/usr/local/opt/ruby/bin
/usr/local/opt/ncurses/bin
"

while read -r pth; do # do not use 'path' as a variable name !
	if [ -z "$PATH" ] || (printf "%s" "$PATH" | GREP_OPTIONS="" command grep -qv "$pth"); then
		export PATH="${pth}:${PATH}"
	fi
done <<EOF 
    $paths
EOF
unset go_prefix go_path paths pth

# append to 'manpath' only if it is not already there
manpaths="\
/usr/local/opt/coreutils/libexec/gnuman
"
while read -r manpth; do
	if [ -z "$MANPATH" ] || (printf "%s" "$MANPATH" | GREP_OPTIONS="" command grep -qv "$manpth"); then
	export MANPATH="${manpth}:${MANPATH}"
fi
done <<EOF 
    $manpaths
EOF
unset manpaths manpth

# homebrew
export HOMEBREW_NO_AUTO_UPDATE=1

export LC_ALL=en_US.UTF-8
